// Specific nf-core/sarek process configuration
process {
  withName: "DESEQ2_DIFFERENTIAL"{
    cpus = { check_resource( 2 * task.attempt) }
    memory = { check_resource( 16.GB * task.attempt) }
  }
  withName: "GSEA_GSEA" {
	  cpus = { check_resource( 4 * task.attempt) }
    memory = { check_resource( 24.GB * task.attempt) }
  }
  withName: "LIMMA_DIFFERENTIAL"{
	  cpus = { check_resource( 2 * task.attempt) }
    memory = { check_resource( 16.GB * task.attempt) }
  }
def check_resource(obj) {
    try {
        if (obj.getClass() == nextflow.util.MemoryUnit && obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
            return params.max_memory as nextflow.util.MemoryUnit
        else if (obj.getClass() == nextflow.util.Duration && obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
            return params.max_time as nextflow.util.Duration
        else if (obj.getClass() == java.lang.Integer)
            return Math.min(obj, params.max_cpus as int)
        else
            return obj
    } catch (all) {
        println "   ### ERROR ###   Max params max_memory:'${params.max_memory}', max_time:'${params.max_time}' or max_cpus:'${params.max_cpus}'  is not valid! Using default value: $obj"
    }
}
